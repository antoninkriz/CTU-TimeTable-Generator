{"version":3,"file":"static/chunks/app/generator/page-ce6841b0a8595eec.js","mappings":"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","sources":["webpack://_N_E/?0ca5","webpack://_N_E/./src/types.ts","webpack://_N_E/./src/app/generator/lib.ts","webpack://_N_E/./src/app/generator/_menuForm.tsx","webpack://_N_E/./src/app/generator/_progress.tsx","webpack://_N_E/./src/app/generator/_timeTable.tsx","webpack://_N_E/./src/app/generator/page.tsx","webpack://_N_E/./src/consts.ts","webpack://_N_E/./src/lib.ts","webpack://_N_E/<anon>"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/CTU-TimeTable-Generator/CTU-TimeTable-Generator/ctu-timetable-generator/src/app/generator/page.tsx\")","// Data\nexport const enum WeekType {\n  // noinspection JSUnusedGlobalSymbols\n  Even = 'S',\n  Odd = 'L',\n}\n\nexport type TimeTableEvent = {\n  day: number\n  week: WeekType\n  weeks_valid: number[]\n  start: [number, number]\n  end: [number, number]\n  room: string | null\n  is_merged: true | undefined\n};\n\nexport type TimeTableEventOnLoad = Omit<TimeTableEvent, 'week'> & {\n  week: WeekType | null\n};\n\nexport const enum ParallelType {\n  Lecture = 'P',\n  Tutorial = 'C',\n  Lab = 'L',\n}\n\nexport type Parallel = {\n  type: ParallelType\n  num: number | null\n  capacity: number | null\n  occupied_places: number | null\n  timetable: TimeTableEvent[]\n  can_register: boolean\n  is_full: boolean\n};\n\nexport type ParallelOnLoad = Omit<Parallel, 'timetable'> & {\n  timetable: TimeTableEventOnLoad[]\n};\n\nexport type CourseOnLoad = {\n  code: string\n  name: string\n  parallels: ParallelOnLoad[]\n};\n\nexport type Course = {\n  code: string\n  name: string\n  parallels: {\n    [key in ParallelType]: Parallel[]\n  }\n};\n\nexport type SemesterOnLoad = CourseOnLoad[];\n\nexport type Semester = Course[];\n\nexport type DataOnLoad = {\n  [key: string]: SemesterOnLoad\n};\n\nexport type Data = {\n  [key: string]: Semester\n};\n\n// Generator\nexport type CoursePreferences = {\n  [classId: string]: {\n    [parallelType in ParallelType]: boolean\n  }\n};\n\nexport type CourseAvailableOnly = {\n  [classId: string]: boolean\n};\n\nexport class OptionClass<T> {\n  value: T;\n\n  label: string;\n\n  constructor(value: T, label: string) {\n    this.value = value;\n    this.label = label;\n  }\n}\n\n// Worker\nexport type Best = {\n  score: number,\n  all_best_parallels_combinations: Parallel[][]\n};\n\nexport type MessageData = {\n  semester: Semester\n  preferences: CoursePreferences\n  allowLocked: CourseAvailableOnly\n  allowFull: CourseAvailableOnly\n};\n\nexport const enum MessageResultTypes {\n  PRE_INIT = 'PRE_INIT',\n  INIT = 'INIT',\n  STATUS = 'STATUS',\n  RESULT = 'RESULT',\n}\n\nexport type MessageResultPreInit = {\n  type: MessageResultTypes.PRE_INIT\n};\n\nexport type MessageResultInit = {\n  type: MessageResultTypes.INIT\n};\n\nexport type MessageResultStatus = {\n  type: MessageResultTypes.STATUS\n  total: number\n  done: number\n};\n\nexport type MessageResultResult = {\n  type: MessageResultTypes.RESULT\n  data: [Course, Parallel][][]\n  total: number\n  done: number\n};\n\nexport type MessageResult = MessageResultPreInit | MessageResultInit | MessageResultStatus | MessageResultResult;\n","import { useToast } from '@chakra-ui/react';\nimport { DATA_URL } from '@src/consts';\nimport {\n  Course,\n  Parallel,\n  ParallelOnLoad,\n  ParallelType,\n  TimeTableEvent,\n  WeekType,\n  type Data,\n  type DataOnLoad,\n  TimeTableEventOnLoad,\n} from '@src/types';\nimport { useEffect, useRef, type MutableRefObject } from 'react';\nimport useSWRImmutable from 'swr/immutable';\n\nexport function calcTimeDiff(a: [number, number], b: [number, number]) {\n  const aStartTime = a[0] * 60 + a[1];\n  const bStartTime = b[0] * 60 + b[1];\n  return aStartTime - bStartTime;\n}\n\nexport function maxTime(a: [number, number], b: [number, number]) {\n  return a[0] > b[0] || (a[0] === b[0] && a[1] >= b[1]) ? a : b;\n}\n\nfunction mergeConflictingEventsInTimeTable(\n  timetable: TimeTableEvent[],\n): TimeTableEvent[] {\n  // This will be the result\n  const newEvents: TimeTableEvent[] = [];\n\n  // First we need to group the classes by weeks\n  const eventsByWeeks = new Map<WeekType, TimeTableEvent[]>();\n  for (const event of timetable) {\n    if (!eventsByWeeks.has(event.week)) eventsByWeeks.set(event.week, []);\n    eventsByWeeks.get(event.week)?.push(event);\n  }\n\n  // For each week\n  for (const eventsThisWeek of eventsByWeeks.values()) {\n    // We need to split the classes by days\n    const eventsByDays = new Map<number, TimeTableEvent[]>();\n    for (const event of eventsThisWeek) {\n      if (!eventsByDays.has(event.day)) eventsByDays.set(event.day, []);\n      eventsByDays.get(event.day)?.push(event);\n    }\n\n    // For each day (where we have classes)\n    for (const events of eventsByDays.values()) {\n      // We should merge the overlapping classes. This is fine since this is only a single parallel,\n      // so also o single type of class (e.g. lecture, tutorial, lab) on a single day\n      const newEventsThisDay: TimeTableEvent[] = [];\n      const roomsSet = new Set<string>();\n      for (const event of events) {\n        if (newEventsThisDay.length === 0 || calcTimeDiff(newEventsThisDay[newEventsThisDay.length - 1].end, event.start) < 0) {\n          // No overlap with the last event\n          newEventsThisDay.push(event);\n          roomsSet.clear();\n          if (event.room) {\n            roomsSet.add(event.room);\n          }\n        } else {\n          // Overlap with the last event, merge them\n          if (event.room) {\n            roomsSet.add(event.room);\n          }\n\n          newEventsThisDay[newEventsThisDay.length - 1] = {\n            ...newEventsThisDay[newEventsThisDay.length - 1],\n            room: roomsSet.size !== 0 ? [...roomsSet].join(' + ') : null,\n            weeks_valid: [...new Set([...newEventsThisDay[newEventsThisDay.length - 1].weeks_valid, ...event.weeks_valid])],\n            end: maxTime(newEventsThisDay[newEventsThisDay.length - 1].end, event.end),\n            is_merged: true,\n          };\n          newEventsThisDay[newEventsThisDay.length - 1].end = maxTime(newEventsThisDay[newEventsThisDay.length - 1].end, event.end);\n        }\n      }\n\n      // Just sort the weeks when the event is valid for each event\n      for (const event of newEventsThisDay) {\n        event.weeks_valid.sort((a, b) => a - b);\n      }\n\n      newEvents.push(...newEventsThisDay);\n    }\n  }\n\n  // Now we can return the merged events\n  return newEvents;\n}\n\nconst compareTimeTableEvents = (a: TimeTableEventOnLoad, b: TimeTableEventOnLoad) => {\n  // First, compare if `data` arrays are empty\n  if (a.weeks_valid.length === 0 && b.weeks_valid.length !== 0) return -1;\n  if (a.weeks_valid.length !== 0 && b.weeks_valid.length === 0) return 1;\n\n  if (a.weeks_valid[0] !== b.weeks_valid[0]) return a.weeks_valid[0] - b.weeks_valid[0];\n\n  // Next, compare based on week (even comes after odd)\n  if (a.week === WeekType.Odd && b.week === WeekType.Even) return -1;\n  if (a.week === WeekType.Even && b.week === WeekType.Odd) return 1;\n\n  // Then, compare by the start time (earlier start comes first)\n  const aStartTime = a.start[0] * 60 + a.start[1];\n  const bStartTime = b.start[0] * 60 + b.start[1];\n  if (aStartTime !== bStartTime) return aStartTime - bStartTime;\n\n  // Finally, compare by the end time (earlier end comes first)\n  const aEndTime = a.end[0] * 60 + a.end[1]; // convert to minutes\n  const bEndTime = b.end[0] * 60 + b.end[1]; // convert to minutes\n  return aEndTime - bEndTime;\n};\n\nconst processParallelByType = (parallels: ParallelOnLoad[], parallelType: ParallelType): Parallel[] =>\n  // eslint-disable-next-line implicit-arrow-linebreak\n  parallels.filter((parallel) => parallel.type === parallelType).map((parallel) => {\n    const timetable = parallel.timetable\n      .sort(compareTimeTableEvents)\n      .reduce((arr, timeTableEvent) => {\n        parallel.timetable.sort();\n\n        if (timeTableEvent.week === null) {\n        // Push both Odd and Even version when the week is null\n          arr.push({\n            ...timeTableEvent,\n            week: WeekType.Odd,\n          } as TimeTableEvent);\n          arr.push({\n            ...timeTableEvent,\n            week: WeekType.Even,\n          } as TimeTableEvent);\n        } else {\n          arr.push(timeTableEvent as TimeTableEvent);\n        }\n        return arr;\n      }, [] as TimeTableEvent[]);\n\n    return {\n      ...parallel,\n      timetable: mergeConflictingEventsInTimeTable(timetable),\n    };\n  });\n\nconst sortAndPreprocessData = (data: DataOnLoad): Data => {\n  // Let's sort stuff in each semester to keep things nicely ordered\n  for (const semester of Object.values(data)) {\n    for (const course of semester) {\n      // Sort parallels in each course in a semester\n      course.parallels.sort((a, b) => {\n        if (a.type === b.type) {\n          if (a.num === null || b.num === null) return 0;\n          return a.num - b.num;\n        }\n\n        if (a.type === ParallelType.Lecture) return -1;\n        if (b.type === ParallelType.Lecture) return 1;\n        if (a.type === ParallelType.Tutorial) return -1;\n        if (b.type === ParallelType.Tutorial) return 1;\n        if (a.type === ParallelType.Lab) return -1;\n        if (b.type === ParallelType.Lab) return 1;\n\n        // NO-OP. should not happen\n        return 0;\n      });\n    }\n\n    // Sort courses in a semester\n    semester.sort((c1, c2) => c1.code.localeCompare(c2.code));\n  }\n\n  return Object.fromEntries(Object.entries(data).map(([semesterId, semester]) => [\n    semesterId,\n    semester.map((course) => ({\n      ...course,\n      parallels: {\n        [ParallelType.Lecture]: processParallelByType(course.parallels, ParallelType.Lecture),\n        [ParallelType.Tutorial]: processParallelByType(course.parallels, ParallelType.Tutorial),\n        [ParallelType.Lab]: processParallelByType(course.parallels, ParallelType.Lab),\n      },\n    } as Course)),\n  ]));\n};\n\nexport const useData = (\n  cbSuccess: MutableRefObject<(() => void) | undefined>,\n  cbError: MutableRefObject<(() => void) | undefined>,\n) => useSWRImmutable<Data>(DATA_URL, async (key: string) => {\n  try {\n    const response = await fetch(key);\n    const data = sortAndPreprocessData(await response.json());\n    return await new Promise((resolve) => {\n      setTimeout(() => {\n        resolve(data);\n        if (cbSuccess.current) cbSuccess.current();\n      }, 100);\n    });\n  } catch (err) {\n    if (cbError.current) cbError.current();\n    throw err;\n  }\n});\n\nexport function useToastDataWrapper() {\n  const TOAST_ID = 'toast-loading-data';\n  const dataResolved = useRef<(() => void) | undefined>(undefined);\n  const dataError = useRef<(() => void) | undefined>(undefined);\n\n  const toast = useToast({ position: 'bottom', id: TOAST_ID });\n  useEffect(() => {\n    if (!toast.isActive(TOAST_ID)) {\n      toast.promise(new Promise((resolve, reject) => {\n        // This is a nice and funny thread race that should (probably) evaluate correctly, so the resolve/reject callbacks\n        // should be assigned just in time when dataResolved/dataError callbacks are used.\n        // Actually, they should be assigned even before the call to useData, so nothing should break, but I can't promise\n        // anything. I hate this as much as you do. :)\n        dataResolved.current = () => resolve(true);\n        dataError.current = () => reject();\n      }), {\n        loading: {\n          title: 'Načítání dat',\n          description: 'To může chvilku trvat',\n          duration: null,\n        },\n        success: {\n          title: 'Vše je ready',\n          description: 'Můžeš se pustit do sestavování rozvrhu',\n        },\n        error: {\n          title: 'ERROR',\n          description: 'Nastala chyba při načítání dat. 😢',\n        },\n      });\n    }\n    // I don't want to update this thing on every re-render, that would create duplicate toast and I ain't risking using\n    // useRef(useToast(...)) together.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return useData(dataResolved, dataError);\n}\n\nexport function arrayDifference<T>(a1: T[], a2: T[]) {\n  const a2Set = new Set(a2);\n  return a1.filter((x) => !a2Set.has(x));\n}\n","import { useContext } from 'react';\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle, Box,\n  Button,\n  Checkbox,\n  Code,\n  Divider,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerOverlay,\n  Flex,\n  Skeleton,\n  Stack,\n  Table,\n  TableContainer,\n  Tbody,\n  Td,\n  Text,\n  Th,\n  Thead,\n  Tooltip,\n  Tr,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { Link } from '@chakra-ui/next-js';\nimport { AsyncSelect, Select } from 'chakra-react-select';\nimport type { SWRResponse } from 'swr';\nimport type {\n  Course, CourseAvailableOnly, Data,\n} from '@src/types';\nimport { OptionClass, ParallelType } from '@src/types';\nimport { GITHUB_URL } from '@src/consts';\nimport { DrawerContext } from '@src/lib';\n\nfunction Error({ errorJS }: { errorJS: Error | undefined }) {\n  const blueLink = useColorModeValue('blue.700', 'blue.300');\n\n  const error = !errorJS\n    ? undefined\n    : {\n      name: errorJS.name,\n      message: errorJS.message,\n      stack: errorJS.stack,\n    };\n\n  if (error) {\n    // eslint-disable-next-line no-console\n    console.error(error.name);\n    // eslint-disable-next-line no-console\n    console.error(error.message);\n    // eslint-disable-next-line no-console\n    console.error(error.stack);\n  } else {\n    // eslint-disable-next-line no-console\n    console.error(\"Loaded data, no data and no error, that's weird.\");\n  }\n\n  return (\n    <Alert status=\"error\" flexDirection=\"column\" justifyContent=\"stretch\" alignItems=\"flex-start\" gap={4}>\n      <Box display=\"flex\" flexDirection=\"row\">\n        <AlertIcon />\n        <AlertTitle>Nastala chyba při načítání dat.</AlertTitle>\n      </Box>\n      <AlertDescription>\n        Prosím, vytvoř novou Issue na <Link href={GITHUB_URL} color={blueLink} fontWeight=\"600\" target=\"_blank\">GitHubu</Link> společně s popisem chyby, screenshotem a blokem\n        následujícího kódu:\n      </AlertDescription>\n      <pre>\n        <Code width=\"100%\" whiteSpace=\"pre-wrap\">{error ? JSON.stringify(error, null, 4) : 'No data'}</Code>\n      </pre>\n    </Alert>\n  );\n}\n\ntype FormComponentProps = {\n  dataResponse: SWRResponse<Data>\n  semester: string | undefined\n  setSemester: (semester: string | undefined) => void\n  courses: Course[]\n  setCourses: (courses: Course[]) => void\n  preferences: { [courseId: string]: { [parallelType in ParallelType]: boolean } }\n  setPreferences: (courseId: string, parallelType: ParallelType, value: boolean) => void\n  allowLocked: CourseAvailableOnly\n  setAllowLocked: (courseId: string, value: boolean) => void\n  allowFull: CourseAvailableOnly\n  setAllowFull: (courseId: string, value: boolean) => void\n  computeCallback: () => void\n  disabled: boolean\n};\n\nfunction FormComponent({\n  dataResponse,\n  semester,\n  setSemester,\n  courses,\n  setCourses,\n  preferences,\n  setPreferences,\n  allowLocked,\n  setAllowLocked,\n  allowFull,\n  setAllowFull,\n  computeCallback,\n  disabled,\n  onCloseMenu = () => {},\n} : FormComponentProps & { onCloseMenu?: () => void }) {\n  const { data, error } = dataResponse;\n  const isLoaded = !dataResponse.isLoading && !dataResponse.isValidating;\n\n  if (error || (isLoaded && !data)) return <Error errorJS={error} />;\n\n  const valueSemester = semester !== undefined ? new OptionClass(semester, semester) : undefined;\n  const optionsSemesters = Object.keys(data || {}).map((semesterId) => new OptionClass(semesterId, semesterId));\n  const valueCourses = courses.map((course) => new OptionClass(course, `${course.code} | ${course.name}`));\n  const filterCourses = (\n    data && semester\n      ? (inp: string, callback: (options: OptionClass<Course>[]) => void) => callback(\n        inp.length >= 3\n          ? data[semester].map((course) => new OptionClass(course, `${course.code} | ${course.name}`)).filter((x) => x.label.toLowerCase().includes(inp.toLowerCase()))\n          : [],\n      )\n      : () => []\n  );\n  const optionsCourses = data && semester !== undefined ? data[semester].map((course) => new OptionClass(course, `${course.code} | ${course.name}`)) : [];\n\n  const paddingCellX = {\n    base: 1,\n    md: 4,\n  };\n\n  return (\n    <>\n      <Skeleton h={!isLoaded ? 28 : undefined} isLoaded={isLoaded}>\n        <Text textAlign=\"justify\">\n          Zvol semestr a předměty, respektive jejich přednášky, cvičení a laboratoře, které tě zajímají.\n          Pokud si rovnou teď přiznáš, že nebudeš na přednášky chodit, zvýšíš šanci, že ti appka dokáže najít bezkolizní\n          rozvrh. S kolizemi (zatím) neumí pracovat. Pokud se v rámci jednoho předmětu a jednoho typu hodin\n          (přednáška, cvičení, laboratoř) vyskytuje kolize nebo nějaká změna, například místnosti, v průběhu semestru,\n          považují se tyto hodiny za sloučené.\n        </Text>\n      </Skeleton>\n      <Divider />\n      <Skeleton h={!isLoaded ? 12 : undefined} isLoaded={isLoaded} fontFamily=\"mono\">\n        <Select<OptionClass<string>, false>\n          instanceId=\"select-semesters\"\n          onChange={(x) => setSemester(x !== null ? x.value : undefined)}\n          value={valueSemester}\n          options={optionsSemesters}\n          placeholder=\"Zvol semestr\"\n          isDisabled={disabled}\n        />\n      </Skeleton>\n      <Skeleton h={!isLoaded ? 12 : undefined} isLoaded={isLoaded} fontFamily=\"mono\">\n        <AsyncSelect<OptionClass<Course>, true>\n          instanceId=\"select-courses\"\n          isMulti\n          isDisabled={semester === undefined || disabled}\n          onChange={(x) => setCourses(x.map((course) => course.value))}\n          value={valueCourses}\n          loadOptions={filterCourses}\n          options={optionsCourses}\n          placeholder=\"Zvol předměty\"\n          closeMenuOnSelect={false}\n          closeMenuOnScroll={false}\n          noOptionsMessage={({ inputValue }) => (\n            !inputValue\n              ? 'Zadej název nebo kód předmětu'\n              : (\n                inputValue.length >= 3\n                  ? 'Nenalezen žádný předmět'\n                  : 'Zadej alespoň 3 znaky'\n              )\n          )}\n        />\n      </Skeleton>\n      <Divider />\n      <Skeleton flex={1} isLoaded={isLoaded}>\n        <TableContainer>\n          <Table size=\"sm\" variant=\"striped\">\n            <Thead>\n              <Tr>\n                <Th px={paddingCellX}>Kód</Th>\n                <Th px={paddingCellX}>Přednášky</Th>\n                <Th px={paddingCellX}>Cvičení</Th>\n                <Th px={paddingCellX}>Laboratoře</Th>\n                <Th px={paddingCellX}><Tooltip label={<Box textAlign=\"center\">Brát v potaz i paralelky,<br />které nemají povolenou registraci</Box>}>🔒</Tooltip></Th>\n                <Th px={paddingCellX}><Tooltip label={<Box textAlign=\"center\">Brát v potaz i paralelky,<br />které jsou již naplněné</Box>}>🔋</Tooltip></Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {courses.map((course) => (\n                <Tr key={course.code}>\n                  <Td px={paddingCellX} fontFamily=\"mono\">{course.code}</Td>\n                  <Td px={paddingCellX}>\n                    {course.parallels[ParallelType.Lecture].length > 0 && (\n                      <Checkbox\n                        defaultChecked\n                        checked={preferences[course.code]?.[ParallelType.Lecture]}\n                        onChange={(e) => setPreferences(course.code, ParallelType.Lecture, e.target.checked)}\n                        isDisabled={disabled}\n                      />\n                    )}\n                  </Td>\n                  <Td px={paddingCellX}>\n                    {course.parallels[ParallelType.Tutorial].length > 0 && (\n                    <Checkbox\n                      defaultChecked\n                      checked={preferences[course.code]?.[ParallelType.Tutorial]}\n                      onChange={(e) => setPreferences(course.code, ParallelType.Tutorial, e.target.checked)}\n                      isDisabled={disabled}\n                    />\n                    )}\n                  </Td>\n                  <Td px={paddingCellX}>\n                    {course.parallels[ParallelType.Lab].length > 0 && (\n                      <Checkbox\n                        defaultChecked\n                        checked={preferences[course.code]?.[ParallelType.Lab]}\n                        onChange={(e) => setPreferences(course.code, ParallelType.Lab, e.target.checked)}\n                        isDisabled={disabled}\n                      />\n                    )}\n                  </Td>\n                  <Td px={paddingCellX}>\n                    <Checkbox\n                      defaultChecked\n                      checked={allowLocked[course.code]}\n                      onChange={(e) => setAllowLocked(course.code, e.target.checked)}\n                      isDisabled={disabled}\n                    />\n                  </Td>\n                  <Td px={paddingCellX}>\n                    <Checkbox\n                      defaultChecked\n                      checked={allowFull[course.code]}\n                      onChange={(e) => setAllowFull(course.code, e.target.checked)}\n                      isDisabled={disabled}\n                    />\n                  </Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </Table>\n        </TableContainer>\n      </Skeleton>\n      <Divider />\n      <Skeleton h={!isLoaded ? 10 : undefined} isLoaded={isLoaded}>\n        <Tooltip label={semester === undefined || courses.length === 0 ? 'Vyber si předměty' : undefined} hasArrow>\n          <Button\n            onClick={() => { onCloseMenu(); computeCallback(); }}\n            isDisabled={disabled || semester === undefined || courses.length === 0 || Object.values(preferences).every((x) => !x.P && !x.C && !x.L)}\n            w=\"full\"\n          >\n            Spustit výpočet\n          </Button>\n        </Tooltip>\n      </Skeleton>\n    </>\n  );\n}\n\nexport function MenuSide({\n  dataResponse,\n  semester,\n  setSemester,\n  courses,\n  setCourses,\n  preferences,\n  setPreferences,\n  allowLocked,\n  setAllowLocked,\n  allowFull,\n  setAllowFull,\n  computeCallback,\n  disabled,\n}: FormComponentProps) {\n  return (\n    <Flex display={{ base: 'none', xl: 'block' }} w=\"xl\" shadow=\"md\">\n      <Stack w=\"full\" h=\"full\" flex={1} spacing={6} p={6}>\n        <FormComponent\n          dataResponse={dataResponse}\n          semester={semester}\n          setSemester={setSemester}\n          courses={courses}\n          setCourses={setCourses}\n          preferences={preferences}\n          setPreferences={setPreferences}\n          allowLocked={allowLocked}\n          setAllowLocked={setAllowLocked}\n          allowFull={allowFull}\n          setAllowFull={setAllowFull}\n          computeCallback={computeCallback}\n          disabled={disabled}\n        />\n      </Stack>\n    </Flex>\n  );\n}\n\nexport function MenuDrawer({\n  dataResponse,\n  semester,\n  setSemester,\n  courses,\n  setCourses,\n  preferences,\n  setPreferences,\n  allowLocked,\n  setAllowLocked,\n  allowFull,\n  setAllowFull,\n  computeCallback,\n  disabled,\n}: FormComponentProps) {\n  const { isOpen, onClose } = useContext(DrawerContext);\n\n  return (\n    <Drawer isOpen={isOpen} onClose={onClose} size={{ base: 'full', md: 'lg' }} placement=\"left\">\n      <DrawerOverlay />\n      <DrawerContent>\n        <DrawerCloseButton />\n        <DrawerBody pt={10} px={4} pb={4} flex=\"none\">\n          <Flex direction=\"column\" flex={1} height=\"full\">\n            <Stack w=\"full\" h=\"full\" flex={1} spacing={6}>\n              <FormComponent\n                dataResponse={dataResponse}\n                semester={semester}\n                setSemester={setSemester}\n                courses={courses}\n                setCourses={setCourses}\n                preferences={preferences}\n                setPreferences={setPreferences}\n                allowLocked={allowLocked}\n                setAllowLocked={setAllowLocked}\n                allowFull={allowFull}\n                setAllowFull={setAllowFull}\n                computeCallback={computeCallback}\n                disabled={disabled}\n                onCloseMenu={onClose}\n              />\n            </Stack>\n          </Flex>\n        </DrawerBody>\n      </DrawerContent>\n    </Drawer>\n  );\n}\n","import {\n  Center, Container, HStack, Progress, Stack, Text, Tooltip,\n} from '@chakra-ui/react';\nimport type { MessageResult } from '@src/types';\nimport { MessageResultTypes } from '@src/types';\n\nexport function ProgressBar({ result }: { result: MessageResult }) {\n  if (result.type !== MessageResultTypes.STATUS && result.type !== MessageResultTypes.INIT) return undefined;\n  const { done, total } = result.type === MessageResultTypes.STATUS ? result : { done: 0, total: 1 };\n\n  const progress = (done / total) * 100;\n\n  return (\n    <Center h=\"full\" w=\"full\">\n      <Container>\n        <Stack>\n          <HStack justifyContent=\"space-between\" px={4}>\n            <Text>Probíhá výpočet...</Text>\n            <Text fontFamily=\"mono\">{progress.toFixed(1)} %</Text>\n          </HStack>\n          <Tooltip\n            fontFamily=\"mono\"\n            label={`${done} / ${total}`}\n            hasArrow\n          >\n            <Progress value={progress} rounded=\"sm\" />\n          </Tooltip>\n        </Stack>\n      </Container>\n    </Center>\n  );\n}\n","import {\n  Box,\n  Button,\n  Card,\n  CardFooter,\n  CardHeader,\n  Center,\n  Container,\n  Divider,\n  Heading,\n  HStack,\n  Icon,\n  Text,\n  Tooltip,\n  useColorModeValue,\n  VStack,\n} from '@chakra-ui/react';\nimport { MessageResultResult, ParallelType, WeekType } from '@src/types';\nimport { useMemo } from 'react';\nimport { IoArrowBack, IoArrowForward } from 'react-icons/io5';\n\ntype TimeTableUIEvent = {\n  course: string;\n  type: ParallelType;\n  num: number | null;\n  day: number;\n  start: number;\n  end: number;\n  startText: string;\n  endText: string;\n  room: string | null;\n  is_merged: boolean;\n};\n\nconst TIME_START = 7 * 60;\nconst TIME_END = 20 * 60;\nconst TIME_TOTAL = TIME_END - TIME_START;\n\nconst DAYS = [\n  'PO', 'ÚT', 'ST', 'ČT', 'PÁ',\n];\n\nconst range = (start: number, stop: number) => Array(Math.ceil((stop - start))).fill(start).map((x, y) => x + y);\n\nfunction Line({ time }: { time: number }) {\n  return (\n    <VStack left={`${((time - TIME_START) / TIME_TOTAL) * 100}%`} w=\"min\" h=\"full\" pos=\"absolute\">\n      <Divider orientation=\"vertical\" />\n      <Text as=\"span\" pos=\"absolute\" bottom=\"100%\" fontWeight=\"hairline\" fontSize=\"xs\" fontFamily=\"mono\">{time / 60}</Text>\n    </VStack>\n  );\n}\n\nfunction Row({ events, day }: { events: TimeTableUIEvent[], day: number }) {\n  const rowBg = useColorModeValue('gray.100', 'gray.900');\n  const colors = {\n    [ParallelType.Lecture]: useColorModeValue('yellow.300', 'yellow.600'),\n    [ParallelType.Tutorial]: useColorModeValue('green.400', 'green.600'),\n    [ParallelType.Lab]: useColorModeValue('red.400', 'red.800'),\n  };\n\n  const diff = [...events.map((x) => x.start), 0];\n  const diffEnd = [TIME_START, ...events.map((x) => x.end)];\n  for (let i = 0; i < diff.length; i++) {\n    diff[i] -= diffEnd[i];\n  }\n\n  return (\n    <HStack minH={20} bg={day % 2 === 1 ? rowBg : undefined} gap={0}>\n      <Center w={4} m={2} fontFamily=\"mono\">{DAYS[day % 5]}</Center>\n      <Box flex={1} w=\"full\" display=\"flex\" alignItems=\"center\">\n        { events.map((event, i) => (\n          <Tooltip\n            key={`${event.course} ${event.num} ${event.day} ${event.start}`}\n            label={(\n              <VStack align=\"start\" spacing={0}>\n                <Text>{event.is_merged ? 'Sloučeno v rámci paralelky' : ' '}</Text>\n                <Text>{event.room ?? ' '}</Text>\n              </VStack>\n            )}\n            hasArrow\n          >\n            <Card\n              size=\"xs\"\n              ml={`${(diff[i] / TIME_TOTAL) * 100}%`}\n              minH={16}\n              width={`${((event.end - event.start) / TIME_TOTAL) * 100}%`}\n              background={colors[event.type]}\n              display=\"inline-flex\"\n              flexDirection=\"column\"\n              justifyContent=\"space-between\"\n              borderRadius={3}\n            >\n              <CardHeader p={1} pb={0}>\n                <Heading fontSize=\"xs\">\n                  {event.course}\n                </Heading>\n              </CardHeader>\n              <CardFooter p={1} pt={0}>\n                <Box fontSize=\"2xs\" width=\"full\">\n                  <Text flex={1}>{event.startText} - {event.endText}</Text>\n                  <Text>{event.num ?? ' '}</Text>\n                </Box>\n              </CardFooter>\n            </Card>\n          </Tooltip>\n        )) }\n      </Box>\n    </HStack>\n  );\n}\n\nexport function TimeTable({\n  result,\n  variantNumber,\n  nextVariant,\n  prevVariant,\n} : {\n  result: MessageResultResult,\n  variantNumber: number,\n  nextVariant: () => void,\n  prevVariant: () => void,\n}) {\n  const data = useMemo(\n    () => result.data.map((variant) => variant.map(([course, parallel]) => parallel.timetable.map((event) => ({\n      course: course.code,\n      type: parallel.type,\n      num: parallel.num,\n      day: (event.day - 1) + (event.week === WeekType.Even ? 5 : 0),\n      start: event.start[0] * 60 + event.start[1],\n      end: event.end[0] * 60 + event.end[1],\n      startText: `${event.start[0].toString().padStart(2, '0')}:${event.start[1].toString().padStart(2, '0')}`,\n      endText: `${event.end[0].toString().padStart(2, '0')}:${event.end[1].toString().padStart(2, '0')}`,\n      room: event.room,\n      is_merged: event.is_merged,\n    } as TimeTableUIEvent))))\n      .map((variant) => variant.reduce((mapping, parallel) => {\n        for (const event of parallel) {\n          if (!mapping[event.day]) mapping[event.day] = [];\n          mapping[event.day].push(event);\n        }\n        return mapping;\n      }, {} as { [key : number]: TimeTableUIEvent[] })),\n    [result.data],\n  );\n\n  if (data.length === 0) {\n    return (\n      <Center h=\"full\" w=\"full\">\n        <Container textAlign=\"center\">\n          <VStack spacing={4}>\n            <Heading fontSize=\"2xl\">Nenalezen žádný rozvrh, který by neobsahoval kolize<br />😥</Heading>\n            <Text as=\"i\">\n              Pronikl jsem vpřed v čase a zahlédl jsem všech {result.total} {result.total >= 5 ? 'možných' : result.total >= 2 ? 'možné' : 'možnou'}{' '}\n              budoucnost{result.total >= 2 ? 'i' : ''}, abych zjistil, jak bude vypadat tvůj semestr.\n              Ani jedna možnost nebyla bez kolizí.\n            </Text>\n            <Text>\n              Zkus zvolit méně předmětů, zakázat přednášky, cvičení či laboratoře u předmětů, které tě třeba tolik nezajímají, a nebo si přiznat, že tenhle\n              semestr bude holt patřit mezi ty náročnější.\n            </Text>\n          </VStack>\n        </Container>\n      </Center>\n    );\n  }\n\n  return (\n    <>\n      <VStack h=\"full\">\n        <HStack w=\"full\" position=\"sticky\" justifyContent=\"space-around\" px={8} py={4}>\n          <Button onClick={prevVariant} isDisabled={variantNumber === 0}>\n            <Icon as={IoArrowBack} />\n          </Button>\n          <Text fontFamily=\"mono\">Rozvrh #{variantNumber + 1} / {data.length}</Text>\n          <Button onClick={nextVariant} isDisabled={variantNumber === data.length - 1}>\n            <Icon as={IoArrowForward} />\n          </Button>\n        </HStack>\n        <Box w={{ base: '100dvw', lg: 'full' }} overflowX=\"auto\">\n          <Heading fontSize=\"lg\" mx={4} mt={4}>Lichý týden</Heading>\n          <Box pos=\"relative\" mt={6} minW={{ base: 'calc(var(--chakra-sizes-20) * 12)', md: 'auto' }}>\n            <Box w=\"stretch\" h=\"full\" pos=\"absolute\" ml={8} pointerEvents=\"none\">\n              {range(8, 20).map((i) => <Line key={i} time={i * 60} />)}\n            </Box>\n            {range(0, 5).map((i) => (\n              <Row key={i} events={data[variantNumber][i] ?? []} day={i} />\n            ))}\n          </Box>\n          <Heading fontSize=\"lg\" mx={4} mt={4}>Sudý týden</Heading>\n          <Box pos=\"relative\" mt={6} minW={{ base: 'calc(var(--chakra-sizes-20) * 12)', md: 'auto' }}>\n            <Box w=\"stretch\" h=\"full\" pos=\"absolute\" ml={8}>\n              {range(8, 20).map((i) => <Line key={i} time={i * 60} />)}\n            </Box>\n            {range(5, 10).map((i) => (\n              <Row key={i} events={data[variantNumber][i] ?? []} day={i} />\n            ))}\n          </Box>\n        </Box>\n      </VStack>\n    </>\n  );\n}\n","'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  Box, Center, Container, Flex, Heading, VStack, Stack, Text,\n} from '@chakra-ui/react';\nimport { arrayDifference, useToastDataWrapper } from '@src/app/generator/lib';\nimport type {\n  Course, CoursePreferences, MessageData, MessageResult,\n} from '@src/types';\nimport { CourseAvailableOnly, MessageResultTypes, ParallelType } from '@src/types';\nimport { MenuDrawer, MenuSide } from '@src/app/generator/_menuForm';\nimport { ProgressBar } from '@src/app/generator/_progress';\nimport { TimeTable } from '@src/app/generator/_timeTable';\n\nfunction useDataWorker(): [MessageResult, (params: MessageData) => void] {\n  const workerRef = useRef<Worker>();\n  const [result, setResult] = useState<MessageResult>({ type: MessageResultTypes.PRE_INIT });\n\n  // Manage response from the worker\n  useEffect(() => {\n    workerRef.current = new Worker(new URL('./_worker/worker.ts', import.meta.url));\n    workerRef.current.onmessage = (event: MessageEvent<MessageResult>) => {\n      setResult(event.data);\n    };\n    return () => {\n      workerRef.current?.terminate();\n    };\n  }, []);\n\n  return [result, (params: MessageData) => workerRef.current?.postMessage(params)];\n}\n\nfunction Intro() {\n  return (\n    <Center h=\"full\" w=\"full\">\n      <Container>\n        <Stack>\n          <VStack justifyContent=\"space-between\" px={4} textAlign=\"center\">\n            <Heading>🗓️<br />Vyber si své předměty</Heading>\n            <Text>\n              Koukni do menu a vyber si semestr a předměty a nastav si, které části předmětů tě zajímají.\n            </Text>\n          </VStack>\n        </Stack>\n      </Container>\n    </Center>\n  );\n}\n\nexport default function Generator() {\n  const dataResponse = useToastDataWrapper();\n\n  const [variantNumber, setVariantNumber] = useState(0);\n  const [isComputing, setIsComputing] = useState(false);\n  const [result, postMessage] = useDataWorker();\n  const [semester, setSemester] = useState<string | undefined>(undefined);\n  const [courses, setCourses] = useState<Course[]>([]);\n  const [preferences, setPreferences] = useState<CoursePreferences>({});\n  const [allowLocked, setAllowLocked] = useState<CourseAvailableOnly>({});\n  const [allowFull, setAllowFull] = useState<CourseAvailableOnly>({});\n  const setCoursesUpdatePreferences = (coursesNew: Course[]) => {\n    const diffAdded = arrayDifference(coursesNew, courses);\n    const diffRemoved = arrayDifference(courses, coursesNew);\n\n    setPreferences((p) => {\n      if (coursesNew.length === 0) return {};\n\n      const res = diffAdded.reduce((obj, course) => {\n        obj[course.code] = {\n          [ParallelType.Lecture]: course.parallels[ParallelType.Lecture].length > 0,\n          [ParallelType.Tutorial]: course.parallels[ParallelType.Tutorial].length > 0,\n          [ParallelType.Lab]: course.parallels[ParallelType.Lab].length > 0,\n        };\n        return obj;\n      }, { ...p });\n\n      for (const courseRemoved of diffRemoved) {\n        delete res[courseRemoved.code];\n      }\n\n      return res;\n    });\n    setCourses(coursesNew);\n    setAllowLocked((a) => {\n      const res = diffAdded.reduce((obj, course) => {\n        obj[course.code] = true;\n        return obj;\n      }, { ...a });\n      for (const courseRemoved of diffRemoved) {\n        delete res[courseRemoved.code];\n      }\n\n      return res;\n    });\n    setAllowFull((a) => {\n      const res = diffAdded.reduce((obj, course) => {\n        obj[course.code] = true;\n        return obj;\n      }, { ...a });\n      for (const courseRemoved of diffRemoved) {\n        delete res[courseRemoved.code];\n      }\n\n      return res;\n    });\n  };\n  const preferencesUpdate = (courseId: string, parallelType: ParallelType, value: boolean) => setPreferences((p) => ({\n    ...p,\n    [courseId]: {\n      ...p[courseId],\n      [parallelType]: value,\n    },\n  }));\n  const allowFullUpdate = (courseId: string, value: boolean) => setAllowFull((a) => ({\n    ...a,\n    [courseId]: value,\n  }));\n  const allowLockedUpdate = (courseId: string, value: boolean) => setAllowLocked((a) => ({\n    ...a,\n    [courseId]: value,\n  }));\n\n  const computeCallback = () => {\n    if (dataResponse.data && semester) {\n      setIsComputing(true);\n      setVariantNumber(0);\n      postMessage({\n        semester: dataResponse.data[semester],\n        preferences,\n        allowLocked,\n        allowFull,\n      });\n    }\n  };\n\n  const nextVariant = () => {\n    if (result.type === MessageResultTypes.RESULT && variantNumber < result.data.length - 1) setVariantNumber(variantNumber + 1);\n  };\n\n  const prevVariant = () => {\n    if (variantNumber > 0) setVariantNumber(variantNumber - 1);\n  };\n\n  if (isComputing && result.type === MessageResultTypes.RESULT) setIsComputing(false);\n\n  let content;\n  switch (result.type) {\n    case MessageResultTypes.INIT:\n    case MessageResultTypes.STATUS:\n      content = <ProgressBar result={result} />;\n      break;\n    case MessageResultTypes.RESULT:\n      content = <TimeTable result={result} variantNumber={variantNumber} nextVariant={nextVariant} prevVariant={prevVariant} />;\n      break;\n    case MessageResultTypes.PRE_INIT:\n    default:\n      content = <Intro />;\n      break;\n  }\n\n  return (\n    <>\n      <Flex grow={1}>\n        <MenuSide\n          dataResponse={dataResponse}\n          semester={semester}\n          setSemester={setSemester}\n          courses={courses}\n          setCourses={setCoursesUpdatePreferences}\n          preferences={preferences}\n          setPreferences={preferencesUpdate}\n          allowLocked={allowLocked}\n          setAllowLocked={allowLockedUpdate}\n          allowFull={allowFull}\n          setAllowFull={allowFullUpdate}\n          computeCallback={computeCallback}\n          disabled={isComputing}\n        />\n        <Box flex={1} width=\"full\">\n          {content}\n        </Box>\n      </Flex>\n      <MenuDrawer\n        dataResponse={dataResponse}\n        semester={semester}\n        setSemester={setSemester}\n        courses={courses}\n        setCourses={setCoursesUpdatePreferences}\n        preferences={preferences}\n        setPreferences={preferencesUpdate}\n        allowLocked={allowLocked}\n        setAllowLocked={allowLockedUpdate}\n        allowFull={allowFull}\n        setAllowFull={allowFullUpdate}\n        computeCallback={computeCallback}\n        disabled={isComputing}\n      />\n    </>\n  );\n}\n","export const BASE_URL = 'https://antoninkriz.github.io/CTU-TimeTable-Generator';\nexport const GITHUB_URL = 'https://github.com/antoninkriz/CTU-TimeTable-Generator';\nexport const PERSONAL_URL = 'https://www.antoninkriz.eu';\nexport const DATA_URL = 'https://raw.githubusercontent.com/antoninkriz/CTU-TimeTable-Generator/data/data.json';\n","'use client';\n\nimport { createContext } from 'react';\nimport { extendTheme } from '@chakra-ui/react';\n\nexport const fontsBase = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"';\nexport const fontsBaseMono = 'SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace';\n\nexport const theme = extendTheme({\n  colors: {},\n  fonts: {\n    heading: `\"Open Sans\",${fontsBase}`,\n    body: `\"Open Sans\",${fontsBase}`,\n    mono: `\"JetBrains Mono\",${fontsBaseMono}`,\n  },\n});\n\nexport const DrawerContext = createContext({\n  isOpen: false,\n  onOpen: () => {},\n  onClose: () => {},\n  onToggle: () => {},\n});\n"],"names":["Promise","resolve","then","__webpack_require__","bind","WeekType","ParallelType","MessageResultTypes","Even","Odd","Lecture","Tutorial","Lab","OptionClass","constructor","value","label","PRE_INIT","INIT","STATUS","RESULT","maxTime","a","b","compareTimeTableEvents","weeks_valid","length","week","aStartTime","start","bStartTime","aEndTime","end","bEndTime","processParallelByType","parallels","parallelType","filter","parallel","type","map","timetable","sort","reduce","arr","timeTableEvent","push","mergeConflictingEventsInTimeTable","newEvents","eventsByWeeks","Map","event","has","set","get","eventsThisWeek","values","eventsByDays","day","events","newEventsThisDay","roomsSet","Set","calcTimeDiff","clear","room","add","size","join","is_merged","sortAndPreprocessData","semester","Object","data","course","num","c1","c2","code","localeCompare","fromEntries","entries","semesterId","param","useData","cbSuccess","cbError","useSWRImmutable","DATA_URL","key","response","fetch","json","setTimeout","current","err","arrayDifference","a1","a2","a2Set","x","Error","errorJS","blueLink","useColorModeValue","error","name","message","stack","undefined","console","jsx_runtime","jsxs","Alert","status","flexDirection","justifyContent","alignItems","gap","Box","display","jsx","AlertIcon","AlertTitle","AlertDescription","Link","href","GITHUB_URL","color","fontWeight","target","pre","Code","width","whiteSpace","JSON","stringify","FormComponent","dataResponse","setSemester","courses","setCourses","preferences","setPreferences","allowLocked","setAllowLocked","allowFull","setAllowFull","computeCallback","disabled","onCloseMenu","isLoaded","isLoading","isValidating","valueSemester","optionsSemesters","keys","valueCourses","filterCourses","inp","callback","toLowerCase","includes","optionsCourses","paddingCellX","base","md","Fragment","Skeleton","h","Text","textAlign","Divider","fontFamily","Select","instanceId","onChange","options","placeholder","isDisabled","AsyncSelect","isMulti","loadOptions","closeMenuOnSelect","closeMenuOnScroll","noOptionsMessage","inputValue","flex","TableContainer","Table","variant","Thead","Tr","Th","px","Tooltip","br","Tbody","Td","Checkbox","defaultChecked","checked","e","hasArrow","Button","onClick","every","P","C","L","w","MenuSide","Flex","xl","shadow","Stack","spacing","p","MenuDrawer","isOpen","onClose","useContext","DrawerContext","Drawer","placement","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerBody","pt","pb","direction","height","ProgressBar","result","done","total","progress","Center","Container","HStack","toFixed","Progress","rounded","DAYS","range","stop","Array","Math","ceil","fill","y","Line","time","VStack","left","TIME_START","TIME_END","pos","orientation","as","bottom","fontSize","Row","rowBg","colors","diff","diffEnd","i","minH","bg","m","align","Card","ml","background","borderRadius","CardHeader","Heading","CardFooter","startText","endText","TimeTable","variantNumber","nextVariant","prevVariant","useMemo","toString","padStart","mapping","position","py","Icon","IoArrowBack","IoArrowForward","lg","overflowX","mx","mt","minW","pointerEvents","Intro","Generator","content","useToastDataWrapper","TOAST_ID","dataResolved","useRef","dataError","toast","useToast","id","useEffect","isActive","promise","reject","loading","title","description","duration","success","setVariantNumber","useState","isComputing","setIsComputing","postMessage","useDataWorker","workerRef","setResult","Worker","tu","URL","u","onmessage","terminate","params","setCoursesUpdatePreferences","diffAdded","coursesNew","diffRemoved","res","obj","courseRemoved","preferencesUpdate","courseId","allowFullUpdate","allowLockedUpdate","grow","BASE_URL","PERSONAL_URL","fontsBase","theme","extendTheme","fonts","heading","body","mono","createContext","onOpen","onToggle"],"sourceRoot":""}